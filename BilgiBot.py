# -*- coding: utf-8 -*-
"""Bilgibot_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nw1K0oCbhV7UrwE5buvU_2cpZLh9Onyl
"""

import pandas as pd
import numpy as np
import random
from sentence_transformers import SentenceTransformer
from scipy.spatial.distance import cdist
import turkishnlp
from turkishnlp import detector
obj = detector.TurkishNLP()
#obj.download()

obj.create_word_set()

import flask
from flask import request, jsonify

app = flask.Flask(__name__)
app.config["DEBUG"] = True
app.config['JSON_AS_ASCII'] = False

df = pd.read_csv("./content/SorularCevaplar.csv")

df.head()

df_questions = df.Question

questions = df_questions.values

df_answers = df.Answer

answers = df_answers.values

model = SentenceTransformer("./content/distiluse-base-multilingual-cased-v2")

faq_embeddings = model.encode(questions)

for q, qe in zip(questions, faq_embeddings):
    distances = cdist([qe], faq_embeddings, "cosine")[0]
    ind = np.argsort(distances, axis=0)[:3]

def getBest(query, K):
    query_embedding = model.encode([query])
    distances = cdist(query_embedding, faq_embeddings, "cosine")[0]
    ind = np.argsort(distances, axis=0)
    #print("\n"+query)
    for c,i in list(zip(distances[ind],  ind))[:K]:
      if(c>0.3):
        return "Ne dediğinizi anlayamadım lütfen tekrar sorunuz."

      else:
        #print(c,questions[i], sep="\t") //c : uzaklık oranı
        return answers[i]

greetings = ["merhaba", "selam", "merhabalar", "selamlar"]

responses = ["Merhaba", "Selam", "Merhabalar"]

closings = ["hoşçakal", "görüşürüz", "güle güle", "kendinize iyi bakın"]

closing_responses = ["Görüşürüz", "Güle güle", "Kendinize iyi bakın"]

def BilgiBot(text: str):
    words = obj.list_words(text)
    if words != obj.auto_correct(words):
        corrected_words = " ".join(obj.auto_correct(words))
    else:
        corrected_words = " ".join(obj.auto_correct(words))
    if corrected_words.lower() in greetings:
        return random.choice(responses) + "," + " " + "Nasıl yardımcı olabilirim?"
    elif corrected_words.lower() == "teşekkürler":
        return "Rica ederim"
    elif corrected_words.lower() == "teşekkür ederim":
        return "Rica ederim"
    elif corrected_words.lower() == "sağol":
        return "Rica ederim"
    elif corrected_words.lower() in closings:
        return random.choice(closing_responses)
    else:
        return getBest(corrected_words,1)

@app.route('/', methods=['POST'])
def chatbot():
    question = request.json
    answer = BilgiBot(question['Text'])
    return jsonify({'Text': answer})

app.run()